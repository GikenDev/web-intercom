name: CD for GitHub Pages

on: push

jobs:
  # Prepare index page
  prepare-index:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src

    steps:
    - name: Source checkout
      uses: actions/checkout@v4
    - name: Rename file to index.html
      run: mv pages_index.html index.html
    - name: Output page as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: index
        path: src/index.html
        retention-days: 1


  # Generate Deno doc
  build-modules-doc:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src

    steps:
    - name: Source checkout
      uses: actions/checkout@v4
    - name: Set up Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v2.x
    - name: Generate modules document
      run: deno doc --html --name="Web Intercom" --private modules/*.ts static/*.js static/*/*.js
    - name: Output docs as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: modules-doc
        path: src/docs/
        retention-days: 1


  # Generate test coverage report
  build-coverage-report:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/tests/js_denotest

    steps:
    - name: Source checkout
      uses: actions/checkout@v4
    - name: Set up Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v2.x
    - name: Run all tests
      run: deno test --parallel --coverage
    - name: Export coverage report as HTML
      if: always()
      run: deno coverage --html
    - name: Output HTML as an artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: src/tests/js_denotest/coverage/html/
        retention-days: 1


  # GitHub Pages artifact make
  make-pages-artifact:
    runs-on: ubuntu-latest
    needs: [prepare-index, build-modules-doc, build-coverage-report]

    steps:
    - name: Place index
      uses: actions/download-artifact@v4
      with:
        name: index
        path: .
    - name: Place modules-doc
      uses: actions/download-artifact@v4
      with:
        name: modules-doc
        path: modules-doc
    - name: Place coverage-report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage-report
    - name: Upload artifact for pages deploy
      uses: actions/upload-pages-artifact@v3
      with:
        path: .


  # GitHub Pages deployment
  deploy-pages:
    # Deployment for only main branch, build steps are for all
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    needs: [make-pages-artifact]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.pages-deploy.outputs.page_url }}

    steps:
    - name: Deploy pages
      id: pages-deploy
      uses: actions/deploy-pages@v4
